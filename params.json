{"name":"Github Tutorial","tagline":"Learning how to use Git & Github","body":"# GitHub Tutorial\r\n\r\n_by: Stella R. LaPorta_\r\n\r\n---\r\n## Git vs. GitHub\r\n* Git: version control = \"snapshots\" of code; helps track progress\r\n    * Git does not require Github\r\n*Github: a cloud/program on the internet that stores your code - [github.com](https://github.com/)\r\n    * Github requires Git\r\n\r\n---\r\n## Initial Setup\r\n* If you don't have a Github account or not using anything cloud-like you can use a one time setup command of `git config`, this is allow you to title your work and commits   \r\n        * `git config --global user.name Your Name`: Sets a 1 time only global username to title your work  \r\n        * `git config --global user.email YourName@email.com`: Sets a 1 time only global username to attach to your work  \r\n* Once you have created a Github account you can connect it with either Cloud9(c9) or Nitrous  \r\n    * To connect websites take the SSH Key from the website (local machine) and connect it to your account.  \r\n    * Every time you Save, Add, Commit and Push it will go to the cloud (Github)  \r\n\r\n* To Save on Cloud9 you can set it to automatic save \r\n        * If you want to manually save go to File then click Save and make sure the circle turns into an x  \r\n* Next you would Add your code to the Stage by doing `git add .` or `git add --all` to get ready to commit  \r\n* After Adding you then would have to use `git status` to see if it committed properly.  \r\n    \r\n    * When you do git status you should get a message that says:\r\n    ```\r\n    On branch master\r\n    Your branch is up-to-date with 'origin/master'.\r\n\r\n    nothing to commit, working directory clean\r\n    ```\r\n    * Once you see the green you can now commit it and to commit it you would use:  \r\n    The message that should go between the quotes should be short and sweet, to show what you have done and what that command did `git commit -m \"Your message\"`; you should always have a message when committing becaue it helps you track your thought and edits\r\n    * Once it has been committed you will see:  \r\n    \r\n        * Type in git log to see if it was committed, at that time you will see your message to yourself and the time you committed it.  \r\n        \r\n        *you will have to type in the command `git log` in order to see the message you attached to the commit and the time and date it was editied\r\n      \r\n    * Finally when it is committed you can do `git push` or `git push origin master` in order to push your committed work up to the cloud (or what system your using)\r\n\r\n---\r\n## Repository Setup\r\n* In order to make a repository through the command line:\r\n    * create folder using `mkdir name-of-repo.md`\r\n    * use `cd folder-name.md` to go into that directory or folder\r\n    * Create file but doing `touch ReadMe.md`\r\n    * Type `git init` to begin tracking your progress by turning it into a repository\r\n* Once made repository through the command line:\r\n    * If using Github with either cloud9 you would have to go to github and go to the + next to your icon then it will say Create New if hovered over it but when you click it you will see the words \"New repository\" and \"New organization\"\r\n    * Click New repository and it will give you the options:\r\n    \r\n* Once you have created the repository on github and added it to your local machine (c9 or Nitrous) you can do:\r\n            `git push origin master` or even `git push`  \r\n\r\n####**This will then cause the file that has been saved, added and commited to be pushed up to the cloud (local machine)**\r\n\r\n---\r\n## Workflow & Commands\r\n\r\n**`git init`**  \r\n    * Opens repository within your current folder, WARNIN: always cd into the folder you want to initilatize before typing in `git init`  \r\n**`git status`**(optional)  \r\n    * Helps to see the last file that was committed  \r\n        * Red =last commit was edited   \r\n        * Green =Staged and ready to commit  \r\n**`git add --all`**  \r\n    * Puts everything in current repository onto the stage to be ready to committed  \r\n**`git commit -m`**  \r\n    * -m :allows you to attach a message to the snapshot   \r\n    * Allows you to take snapshot of your code to get ready to be pushed up to the cloud  \r\n    * Always add message to help you track your progress  \r\n**`git push`**  \r\n    * pushes all changes that have been added and committed up to the cloud to be publicly display  \r\n**`git pull`**  \r\n    *Used during collaboration to pull down other changes that have been pushed up to the cloud to see what they have added or edited   \r\n**`git log`**  \r\n    * Once you have saved added and committed you can type in git log in order to see all of your commits and the messages along with them  \r\n**`git diff`**  \r\n    * Shows you the difference between the current code you have now and what was last committed  \r\n**`git remote add`**  \r\n    * connecting your repo on your local machine directly to github  \r\n        * `-u origin master`: it means to push the repo up to the repository on the master branch  \r\n**`git remote -v`**  \r\n    * Allows you to see which remote repository's are currently attached to your local machine  \r\n**`git clone`**  \r\n    * Used to clone a copy of someone else's repository but not be able to push it and mix it with their code   \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}